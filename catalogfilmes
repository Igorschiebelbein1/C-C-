#include <stdio.h>
#include <stdlib.h>
#include <string.h>

#define MAX_USERS 100
#define MAX_MOVIES 100
#define MAX_CART_ITEMS 10
#define MOVIE_FILE "movies.txt"

typedef struct {
	char name[50];
	char email[50];
	char password[20];
} User;

typedef struct {
	char id[20];
	char title[50];
	float price;
	char description[100];
	char genre[30];
} Movie;

typedef struct {
	char movieId[20];
	int quantity;
} CartItem;

User users[MAX_USERS];
int userCount = 0;
Movie movies[MAX_MOVIES];
int movieCount = 0;
CartItem cart[MAX_CART_ITEMS];
int cartItemCount = 0;

void loadMoviesFromFile() {
	FILE *file = fopen(MOVIE_FILE, "r");
	if (!file) {
		printf("Erro ao abrir o arquivo de filmes.\n");
		return;
	}

	while (fscanf(file, "%s %[^\n]s %f %[^\n]s %[^\n]s", movies[movieCount].id,
	              movies[movieCount].title, &movies[movieCount].price,
	              movies[movieCount].description, movies[movieCount].genre) == 5) {
		movieCount++;
	}
	fclose(file);
}

void saveMoviesToFile() {
	FILE *file = fopen(MOVIE_FILE, "w");
	if (!file) {
		printf("Erro ao abrir o arquivo de filmes para escrita.\n");
		return;
	}

	for (int i = 0; i < movieCount; i++) {
		fprintf(file, "%s %s %.2f %s %s\n", movies[i].id, movies[i].title,
		        movies[i].price, movies[i].description, movies[i].genre);
	}
	fclose(file);
}

void registerUser() {
	if (userCount >= MAX_USERS) {
		printf("Limite maximo de usuarios alcan√ßado.\n");
		return;
	}

	User newUser;
	printf("Digite seu nome: ");
	scanf(" %[^\n]s", newUser.name);
	printf("Digite seu email: ");
	scanf("%s", newUser.email);
	printf("Digite sua senha: ");
	scanf("%s", newUser.password);

	users[userCount++] = newUser;
	printf("UsuC!rio registrado com sucesso!\n");
}

User* loginUser() {
	char email[50], password[20];
	printf("Digite seu email: ");
	scanf("%s", email);
	printf("Digite sua senha: ");
	scanf("%s", password);

	for (int i = 0; i < userCount; i++) {
		if (strcmp(users[i].email, email) == 0 && strcmp(users[i].password, password) == 0) {
			printf("Login bem-sucedido! OlC!, %s!\n", users[i].name);
			return &users[i];
		}
	}

	printf("Email ou senha incorretos.\n");
	return NULL;
}

void printMovies() {
	printf("CatC!logo de Filmes:\n");
	for (int i = 0; i < movieCount; i++) {
		printf("[%s] %s: R$ %.2f - %s - GC*nero: %s\n", movies[i].id, movies[i].title, movies[i].price, movies[i].description, movies[i].genre);
	}
}

void addToCart(const char* movieId, int quantity) {
	if (cartItemCount >= MAX_CART_ITEMS) {
		printf("Limite mC!ximo de itens no carrinho alcanC'ado.\n");
		return;
	}

	for (int i = 0; i < cartItemCount; i++) {
		if (strcmp(cart[i].movieId, movieId) == 0) {
			cart[i].quantity += quantity;
			return;
		}
	}

	strcpy(cart[cartItemCount].movieId, movieId);
	cart[cartItemCount].quantity = quantity;
	cartItemCount++;
}

void removeFromCart(const char* movieId, int quantity) {
	for (int i = 0; i < cartItemCount; i++) {
		if (strcmp(cart[i].movieId, movieId) == 0) {
			cart[i].quantity -= quantity;
			if (cart[i].quantity <= 0) {
				cartItemCount--;
				for (int j = i; j < cartItemCount; j++) {
					cart[j] = cart[j + 1];
				}
			}
			return;
		}
	}
}

void showCart() {
	if (cartItemCount == 0) {
		printf("O carrinho estC! vazio.\n");
		return;
	}

	float total = 0.0;
	printf("Seu Carrinho:\n");
	for (int i = 0; i < cartItemCount; i++) {
		for (int j = 0; j < movieCount; j++) {
			if (strcmp(movies[j].id, cart[i].movieId) == 0) {
				float price = movies[j].price * cart[i].quantity;
				total += price;
				printf("[%s] %s (%d dias): R$ %.2f\n", movies[j].id, movies[j].title, cart[i].quantity, price);
				break;
			}
		}
	}
	printf("PreC'o Total: R$ %.2f\n", total);
}

void pay() {
	if (cartItemCount == 0) {
		printf("NC#o hC! nenhum produto em seu carrinho para ser pago.\n");
		return;
	}

	showCart();
	printf("Pagamento realizado com sucesso!\n");
	cartItemCount = 0;
}

void adminMenu() {
	const char adminUser[] = "ferrein1";
	const char adminPass[] = "filmesbr34";
	char inputUser[50], inputPass[20];
	int choice;

	printf("Digite o nome de usuC!rio do administrador: ");
	scanf("%s", inputUser);
	printf("Digite a senha do administrador: ");
	scanf("%s", inputPass);

	if (strcmp(inputUser, adminUser) == 0 && strcmp(inputPass, adminPass) == 0) {
		while (1) {
			printf("\nMenu Administrador:\n");
			printf("1. Adicionar Filme\n");
			printf("2. Remover Filme\n");
			printf("3. Sair\n");
			printf("Escolha uma opC'C#o: ");
			scanf("%d", &choice);

			switch (choice) {
			case 1: {
				Movie newMovie;
				printf("Digite o ID do filme: ");
				scanf("%s", newMovie.id);
				printf("Digite o tC-tulo do filme: ");
				scanf(" %[^\n]s", newMovie.title);
				printf("Digite o preC'o do filme: ");
				scanf("%f", &newMovie.price);
				printf("Digite a descriC'C#o do filme: ");
				scanf(" %[^\n]s", newMovie.description);
				printf("Digite o gC*nero do filme: ");
				scanf("%s", newMovie.genre);

				// Adicionar o filme em ordem
				int i;
				for (i = 0; i < movieCount; i++) {
					if (strcmp(movies[i].id, newMovie.id) > 0) {
						break;
					}
				}
				for (int j = movieCount; j > i; j--) {
					movies[j] = movies[j - 1];
				}
				movies[i] = newMovie;
				movieCount++;
				printf("Filme adicionado com sucesso!\n");
				saveMoviesToFile();
				break;
			}
			case 2: {
				char movieId[20];
				printf("Digite o ID do filme a ser removido: ");
				scanf("%s", movieId);

				int found = 0;
				for (int i = 0; i < movieCount; i++) {
					if (strcmp(movies[i].id, movieId) == 0) {
						found = 1;
						for (int j = i; j < movieCount - 1; j++) {
							movies[j] = movies[j + 1];
						}
						movieCount--;
						printf("Filme removido com sucesso!\n");
						saveMoviesToFile();
						break;
					}
				}
				if (!found) {
					printf("Filme nC#o encontrado.\n");
				}
				break;
			}
			case 3:
				return;
			default:
				printf("OpC'C#o invC!lida.\n");
			}
		}
	} else {
		printf("Credenciais invC!lidas.\n");
	}
}

void menu() {
	int choice;
	User* loggedUser;

	loadMoviesFromFile();  // Carregar filmes do arquivo

	while (1) {
		printf("\n1. Registrar\n");
		printf("2. Login\n");
		printf("3. Acesso Administrador\n");
		printf("4. Sair\n");
		printf("Escolha uma opC'C#o: ");
		scanf("%d", &choice);

		switch (choice) {
		case 1:
			registerUser();
			break;
		case 2:
			loggedUser = loginUser();
			if (loggedUser != NULL) {
				while (1) {
					printf("\n1. Exibir CatC!logo\n");
					printf("2. Adicionar ao Carrinho\n");
					printf("3. Remover do Carrinho\n");
					printf("4. Mostrar Carrinho\n");
					printf("5. Pagar\n");
					printf("6. Sair\n");
					printf("Escolha uma opC'C#o: ");
					scanf("%d", &choice);

					char movieId[20];
					int quantity;

					switch (choice) {
					case 1:
						printMovies();
						break;
					case 2:
						printMovies();
						printf("Digite o ID do filme: ");
						scanf("%s", movieId);
						printf("Quantos dias vocC* deseja alugar o filme? ");
						scanf("%d", &quantity);
						addToCart(movieId, quantity);
						printf("Filme adicionado ao carrinho para %d dias.\n", quantity);
						break;
					case 3:
						printf("Digite o ID do filme: ");
						scanf("%s", movieId);
						printf("Quantos dias vocC* deseja remover? ");
						scanf("%d", &quantity);
						removeFromCart(movieId, quantity);
						printf("Filme removido do carrinho.\n");
						break;
					case 4:
						showCart();
						break;
					case 5:
						pay();
						break;
					case 6:
						printf("AtC) logo!\n");
						return;
					default:
						printf("OpC'C#o invC!lida.\n");
					}
				}
			}
			break;
		case 3:
			adminMenu();
			break;
		case 4:
			printf("AtC) logo!\n");
			exit(0);
		default:
			printf("OpC'C#o invC!lida.\n");
		}
	}
}

int main() {
	menu();
	return 0;
}
